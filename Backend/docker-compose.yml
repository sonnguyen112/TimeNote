---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
  
  mysqldb:
    image: mysql
    hostname: mysqldb
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$DATABASE_PASSWORD
    ports:
      - $DATABASE_PORT:$MYSQLDB_DOCKER_PORT
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
      # - db:/var/lib/mysql


  discoveryserver:
    build: ./discovery-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      DISCOVERY_HOST: discoveryserver
    volumes:
      - .m2:/root/.m2

  courseservice:
    depends_on:
      - mysqldb
      - discoveryserver
    build: ./CourseService
    restart: on-failure
    environment:
      DB_HOST: mysqldb
      DB_NAME: timenotecourseservice
      DB_PASSWORD: $DATABASE_PASSWORD
      DB_PORT: 3306
      DB_USERNAME: root
      KAFKA_CLIENT_ID: transport_image_producer
      KAFKA_HOST: broker
      KAFKA_PORT: 9092
      KAFKA_TOPIC_NAME: transport_image
      DISCOVERY_HOST: discoveryserver
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  gatewayserver:
    depends_on:
      - discoveryserver
    build: ./gateway-server
    restart: always
    ports:
      - "8201:8201"
    environment:
      DISCOVERY_HOST: discoveryserver
    volumes:
      - .m2:/root/.m2

  authservice:
    depends_on:
        - mysqldb
        - discoveryserver
    build: ./auth_service
    restart: unless-stopped
    environment:
      DB_HOST: mysqldb
      DB_NAME: timenoteauthservice
      DB_PASSWORD: $DATABASE_PASSWORD
      DB_PORT: 3306
      DB_USERNAME: root
      DISCOVERY_HOST: discoveryserver
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true


  attendanceservice:
    depends_on:
      - "mysqldb"
      - "discoveryserver"
    build: ./AttendanceService
    restart: unless-stopped
    tty: true
    environment:
      DATABASE_HOSTNAME: mysqldb
      DATABASE_PORT: 3306
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: $DATABASE_PASSWORD
      DATABASE_NAME: timenoteattendanceservice
      KAFKA_CONSUME_GROUP: transport_image_group
      KAFKA_BOOTSTRAP_SERVERS: broker:9092
      KAFKA_TOPIC_NAME: transport_image
      DISCOVERY_HOST: discoveryserver


    volumes:
    - .m2:/root/.m2
    ports:
      - "8000:8000"
  



volumes:
  db: